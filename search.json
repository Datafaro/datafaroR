[{"path":"https://datafaro.github.io/datafaroR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel E. de la Rosa. Author, maintainer. Datafaro. Copyright holder.","code":""},{"path":"https://datafaro.github.io/datafaroR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"de la Rosa D (2024). datafaro: Interact Datafaro API Seamlessly. R package version 0.9.0, https://datafaro.github.io/datafaroR/.","code":"@Manual{,   title = {datafaro: Interact with the Datafaro API Seamlessly},   author = {Daniel E. {de la Rosa}},   year = {2024},   note = {R package version 0.9.0},   url = {https://datafaro.github.io/datafaroR/}, }"},{"path":"https://datafaro.github.io/datafaroR/index.html","id":"datafaro-","dir":"","previous_headings":"","what":"Interact with the Datafaro API Seamlessly","title":"Interact with the Datafaro API Seamlessly","text":"DataFaro ofrece acceso datos recurrentes de una variedad de fuentes. Abstrae las preocupaciones relacionadas con la frecuencia de los datos, el formato y el calendario de publicación. Este paquete proporciona un envoltorio conveniente para interactuar con la API de DataFaro, facilitando los usuarios de R el aprovechamiento del poder de DataFaro.","code":""},{"path":"https://datafaro.github.io/datafaroR/index.html","id":"instalación","dir":"","previous_headings":"","what":"Instalación","title":"Interact with the Datafaro API Seamlessly","text":"Puedes instalar datafaro desde el repositorio r-universe de Adatar:","code":"install.packages('datafaro', repos = 'https://adatar-do.r-universe.dev')"},{"path":"https://datafaro.github.io/datafaroR/index.html","id":"ejemplo","dir":"","previous_headings":"","what":"Ejemplo","title":"Interact with the Datafaro API Seamlessly","text":"Aquí tienes un ejemplo básico para comenzar con datafaro:","code":"library(datafaro) get_data('NC_XDC') #> ✔ Setting active project to 'C:/Users/drdsd/Documents/Projects/DOMAR/datafaroR' #> # A tibble: 132 × 2 #>    date        value #>    <date>      <dbl> #>  1 1991-03-01 25592. #>  2 1991-06-01 25884. #>  3 1991-09-01 26270. #>  4 1991-12-01 28863. #>  5 1992-03-01 29160. #>  6 1992-06-01 30660. #>  7 1992-09-01 31504. #>  8 1992-12-01 36430. #>  9 1993-03-01 32681. #> 10 1993-06-01 34340. #> # ℹ 122 more rows #> Datafaro's datalight: NC_XDC #> Full name: PIB Gasto > Consumo final total nominal (RD$) #> Next update: 2024-04-13T12:44:08-04:00"},{"path":"https://datafaro.github.io/datafaroR/reference/as_datalight.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Datafaro's datalight list object to a datalight object — as_datalight","title":"Convert a Datafaro's datalight list object to a datalight object — as_datalight","text":"Convert Datafaro's datalight list object datalight object","code":""},{"path":"https://datafaro.github.io/datafaroR/reference/as_datalight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Datafaro's datalight list object to a datalight object — as_datalight","text":"","code":"as_datalight(data)"},{"path":"https://datafaro.github.io/datafaroR/reference/as_datalight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Datafaro's datalight list object to a datalight object — as_datalight","text":"data Datafaro's datalight list object","code":""},{"path":"https://datafaro.github.io/datafaroR/reference/as_datalight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Datafaro's datalight list object to a datalight object — as_datalight","text":"datalight object","code":""},{"path":"https://datafaro.github.io/datafaroR/reference/as_datalight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Datafaro's datalight list object to a datalight object — as_datalight","text":"","code":"if (FALSE) {   .res <- list(       data = mtcars,        dictionary = list(),        metadata = list(next_update = Sys.Date() + 30),        cached = Sys.Date(),        slug = \"mtcars\"      )   mi_tibble <- as_datalight(.res)   print(mi_tibble) }"},{"path":"https://datafaro.github.io/datafaroR/reference/auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Autenticar y obtener token de acceso — auth","title":"Autenticar y obtener token de acceso — auth","text":"Esta función verifica si existe información de autenticación previa almacenada y válida. Si encuentra información válida o el token ha expirado, solicita al usuario que se autentique nuevamente. Si la autenticación es exitosa, genera y almacena un nuevo token de acceso para solicitudes futuras. En caso de encontrar un token válido y expirado, lo retorna para su uso inmediato.","code":""},{"path":"https://datafaro.github.io/datafaroR/reference/auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autenticar y obtener token de acceso — auth","text":"","code":"auth()"},{"path":"https://datafaro.github.io/datafaroR/reference/auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Autenticar y obtener token de acceso — auth","text":"Retorna el token de acceso si la autenticación es exitosa o el token almacenado sigue siendo válido. En otros casos, guía al usuario para realizar una nueva autenticación.","code":""},{"path":"https://datafaro.github.io/datafaroR/reference/auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Autenticar y obtener token de acceso — auth","text":"","code":"if (FALSE) { auth() # Ejecuta esta funci\\u00f3n para autenticarte o validar el token existente. }"},{"path":[]},{"path":"https://datafaro.github.io/datafaroR/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtener la última actualización de un conjunto de datos de Datafaro — get_data","text":"","code":"get_data(code, .token = auth(), .cached = TRUE)"},{"path":"https://datafaro.github.io/datafaroR/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtener la última actualización de un conjunto de datos de Datafaro — get_data","text":"code character Código del conjunto de datos .token character Token de acceso la API. Si se ha guardado un token, se debe especificar el token manualmente. .cached logical Si se debe utilizar la caché. Por defecto es TRUE.","code":""},{"path":"https://datafaro.github.io/datafaroR/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtener la última actualización de un conjunto de datos de Datafaro — get_data","text":"Un datalight con la última actualización del conjunto de datos.","code":""},{"path":"https://datafaro.github.io/datafaroR/reference/get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtener la última actualización de un conjunto de datos de Datafaro — get_data","text":"","code":"if (FALSE) { get_data(\"NC_XDC\") }"},{"path":"https://datafaro.github.io/datafaroR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://datafaro.github.io/datafaroR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://datafaro.github.io/datafaroR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://datafaro.github.io/datafaroR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://datafaro.github.io/datafaroR/reference/print.datalight.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a datalight object — print.datalight","title":"Print a datalight object — print.datalight","text":"Print datalight object","code":""},{"path":"https://datafaro.github.io/datafaroR/reference/print.datalight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a datalight object — print.datalight","text":"","code":"# S3 method for datalight print(x, ...)"},{"path":"https://datafaro.github.io/datafaroR/reference/print.datalight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a datalight object — print.datalight","text":"x Datafaro's datalight json object ... arguments passed methods","code":""},{"path":"https://datafaro.github.io/datafaroR/reference/print.datalight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a datalight object — print.datalight","text":"print object. Invisible x","code":""},{"path":"https://datafaro.github.io/datafaroR/reference/print.datalight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a datalight object — print.datalight","text":"","code":"if (FALSE) {   .res <- jsonlite::toJSON(       list(           data = mtcars,           dictionary = list(),           metadata = list(next_update = Sys.Date() + 30),           cached = Sys.Date(),           slug = \"mtcars\"        )    )   mi_tibble <- as_datalight(.res)   print(mi_tibble) }"}]
